
# 线上配置文件
# @author <a href="https://github.com/Liuhy54">Liuhy54</a>
# @from <a href="https://github.com/Liuhy54/haidati-public">ai答题平台海答题</a>
server:
  port: 8101
  servlet:
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000
        # 解决跨域问题
        same-site: none
        secure: true
spring:
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://自己的主机地址:3306/haidati
    username: xxx
    password: xxx
  # Redis 配置
  redis:
    database: 1
    host: 自己的主机地址
    port: 6379
    timeout: 5000
    password: xxx
  # 分库分表配置（开源代码部署可忽略）
  shardingsphere:
    #数据源配置
    datasource:
      # 多数据源以逗号隔开即可
      names: haidati
      haidati:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://自己的主机地址:3306/haidati?allowPublicKeyRetrieval=true&useSSL=false
        username: xxx
        password: xxx
    # 规则配置
    rules:
      sharding:
        # 分片算法配置
        sharding-algorithms:
          # 自定义分片规则名
          answer-table-inline:
            ## inline 类型是简单的配置文件里面就能写的类型，其他还有自定义类等等
            type: INLINE
            props:
              algorithm-expression: user_answer_$->{appId % 2}
        tables:
          user_answer:
            actual-data-nodes: haidati.user_answer_$->{0..1}
            # 分表策略
            table-strategy:
              standard:
                sharding-column: appId
                sharding-algorithm-name: answer-table-inline
# 对象存储
# todo 需替换配置
cos:
  client:
    accessKey: xxx
    secretKey: xxx
    region: xxx
    bucket: xxx
mybatis-plus:
  configuration:
    # 生产环境关闭日志
    log-impl: ''
# 接口文档配置
knife4j:
  basic:
    enable: true
    username: root
    password: root
# AI 配置
ai:
  apiKey: 惠普AI开放平台API Key
